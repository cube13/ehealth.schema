"""
Employee details contain information about Party (personal data) and Employee (proffesional data)
"""
type Employee implements Node {
  "The ID of an object"
  id: ID!
  "Primary key identifier from the database"
  databaseId: ID!
  position: String!
  startDate: Date! @fake(locale: "uk", method: "date.past", args: [100])
  endDate: Date @fake(locale: "uk", method: "date.past", args: [100])
  status: EmployeeStatus!
  employeeType: String!
  party: Party!
  doctor: Doctor
  division: Division
  legalEntity: LegalEntity!
}

enum EmployeeStatus {
  NEW
  APPROVED
  DISMISSED
}

enum Gender {
  MALE
  FEMALE
}

type Party {
  firstName: String!
  lastName: String!
  secondName: String
  birthDate: Date!
  gender: Gender!
  phones: [Phone]
}

type Doctor {
  specialities: [Speciality]
}

type Speciality {
  speciality: String!
  specialityOfficio: Boolean!
  level: String!
  qualificationType: String!
  attestationName: String!
  attestationDate: Date!
  validToDate: Date @fake(locale: "uk", method: "date.past", args: [100])
  certificateNumber: String!
}

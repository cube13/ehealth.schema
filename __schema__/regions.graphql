"""
A condition to be used against `Region` object types. All fields are tested for equality and combined with a logical ‘and.’
"""
input RegionFilter {
  "Checks for equality with the object’s `name` field."
  name: String
  "Checks for equality with the object’s `koatuu` field. State Classifier of Objects of the Administrative-Territorial Order of Ukraine."
  koatuu: String
}

"""
Methods to use when ordering `Region`.
"""
enum RegionOrderBy {
  "Orders by the object’s `name` field in the ascending order."
  NAME_ASC
  "Orders by the object’s `name` field in the descending order."
  NAME_DESC
}

"""
A connection to a list of `Region` values.
"""
type RegionConnection {
  "Information to aid in pagination."
  pageInfo: PageInfo!
  "A list of nodes."
  nodes: [Region]
  "A list of edges."
  edges: [RegionEdge]
}

"""
Reads and enables pagination through a set of `Region`.
"""
type RegionEdge {
  "The item at the end of the edge."
  node: Region!
  "A cursor for use in pagination."
  cursor: String!
}

"""
A primary administrative division of Ukraine.
"""
type Region implements Node {
  "The ID of an object."
  id: ID!
  "Primary key identifier from the database."
  databaseId: ID!
  "Region name."
  name: String!
  "State Classifier of Objects of the Administrative-Territorial Order of Ukraine."
  koatuu: String!

  "Reads and enables pagination through a set of `District`."
  districts(
    "A condition to be used in determining which values should be returned by the collection."
    filter: DistrictFilter
    "The method to use when ordering collection items."
    orderBy: DistrictOrderBy
    "Read all values in the set after (below) this cursor."
    after: String
    "Read all values in the set before (above) this cursor."
    before: String
    "Only read the first _n_ values of the set."
    first: Int
    "Only read the last _n_ values of the set."
    last: Int
  ): DistrictConnection!

  "Date and time when record was inserted."
  insertedAt: DateTime!
  "Date and time when record was updated."
  updatedAt: DateTime!
}
